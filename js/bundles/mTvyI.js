var pageComponent=webpackJsonppageComponent([9],{134:function(e,t,o){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function r(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=o(0),c=n(i),s=o(2),p=n(s);o(5),o(6),o(7),o(8),o(9),o(10),o(11),o(12);var d=o(135),u=n(d),h=function(e){function t(){return l(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return r(t,e),t}(c.default);p.default.register(h,u.default),t.default=h},135:function(e,t,o){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function r(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0}),t.templates=t.mTvyI=void 0;var i,c=o(0),s=n(c),p=o(2),d=n(p);goog.loadModule(function(e){function t(e,t,n){var i=function(){l("article",null,null,"id","registering"),l("h2"),c("electric.config.js"),a("h2"),l("p"),c("All options can be set in the "),l("code"),c("electric.config.js"),a("code"),c(" file located in the root of your project. This file must export an Object, or a function that returns an Object."),a("p"),s({code:"module.exports = {\n    pathDest: 'build'\n};\n\n// or\n\nmodule.exports = function() {\n    return {\n        pathDest: 'build'\n    };\n};",mode:"text/javascript"},null,n),a("article"),l("article",null,null,"id","options"),l("h2"),c("Options"),a("h2"),l("h3"),c("basePath"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("String"),a("code"),a("li"),l("li"),c("Default: "),l("code"),c("''"),a("code"),a("li"),a("ul"),l("p"),c("Prefixes all urls used in resources and navigation elements with the supplied path."),a("p"),l("p"),c("Example:"),a("p"),s({code:"module.exports = {\n    basePath: '/base-path'\n};",mode:"text/javascript"},null,n),l("p"),c("Now all of the generated navigation elements will be prefixed with this path."),a("p"),s({code:'<a class="sidebar-link" href="/base-path/docs/index.html"><span>Pages</span></a>',mode:"text/html"},null,n),l("p"),c("It will also prefix the urls the auto-generated "),l("code"),c("script"),a("code"),c(" and "),l("code"),c("link"),a("code"),c(" tags."),a("p"),s({code:'<link rel="stylesheet" href="/base-path/vendor/senna/senna.css">',mode:"text/html"},null,n),l("p"),c("This setting can be useful for hosting services such as "),l("code"),c("gh-pages"),a("code"),c(" which nest your project under a path generated by your project name. For example, "),l("code"),c("https://electricjs.github.io/project-name/"),a("code"),c(" would require the following config."),a("p"),s({code:"module.exports = {\n    basePath: '/project-name',\n    deployOptions: {\n        branch: 'gh-pages'\n    }\n};",mode:"text/javascript"},null,n),l("h3"),c("codeMirrorLanguages"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("Array<languageName>"),a("code"),a("li"),l("li"),c("Default: "),l("code"),c("['xml', 'css', 'javascript']"),a("code"),a("li"),a("ul"),l("p"),c("An Array of langauge names for syntax highlighting. See "),l("a",null,null,"href","https://codemirror.net/mode/index.html"),c("CodeMirror"),a("a"),c(" for a list of available languages."),a("p"),l("h3"),c("codeMirrorTheme"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("String"),a("code"),a("li"),l("li"),c("Default: "),l("code"),c("'dracula'"),a("code"),a("li"),a("ul"),l("p"),c("Theme to be used by CodeMirror. See "),l("a",null,null,"href","https://codemirror.net/demo/theme.html"),c("CodeMirror"),a("a"),c(" for a list of available themes."),a("p"),l("h3"),c("deployOptions"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("Object"),a("code"),a("li"),l("li"),c("Default: "),l("code"),c("{ branch: 'wedeploy' }"),a("code"),a("li"),a("ul"),l("p"),c("Configuration options used by the "),l("code"),c("deploy"),a("code"),c(" command. See "),l("a",null,null,"href","https://www.npmjs.com/package/gh-pages#options"),c("gh-pages"),a("a"),c(" for further configuration options."),a("p"),l("h3"),c("envOptions"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("Object"),a("code"),a("li"),a("ul"),l("p"),c("Allows you to set predefined options that can conditionally overwrite the default options from electric.config.js."),a("p"),l("p"),c("Example:"),a("p"),l("p"),c("Let's say you need to deploy to two different branches, "),l("code"),c("envOptions"),a("code"),c(" allows you to define a custom set of options that can be enabled via a command line flag."),a("p"),s({code:"module.exports = {\n    envOptions: {\n        ghpages: {\n            deployOptions: {\n                branch: 'ghpages'\n            }\n        }\n    },\n    deployOptions: {\n        branch: 'default-branch'\n    }\n};",mode:"text/javascript"},null,n),l("p"),c("Running "),l("code"),c("electric deploy"),a("code"),c(" will use the default settings, publishing to the "),l("code"),c("default-branch"),a("code"),c("."),a("p"),l("p"),c("However, if you run the following,"),a("p"),s({code:"electric deploy --env ghpages",mode:"text/bash"},null,n),l("p"),c("The "),l("code"),c("ghpages"),a("code"),c(" options defined above will overwrite the default options, deploying your site to the "),l("code"),c("gh-pages"),a("code"),c(" branch."),a("p"),l("p"),c("Note: any of the configuration options can be set in "),l("code"),c("envOptions");a("code"),c(", not just what is seen in the example."),a("p"),l("h3"),c("frontMatterHook"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("function"),a("code"),a("li"),a("ul"),l("p"),c("Allows modifications of your project's front-matter before it's passed to the templates."),a("p"),l("p"),c("Example:"),a("p"),s({code:"module.exports = {\n    frontMatterHook: function(data) {\n        data.someValue = 'Hello, World!';\n\n        return data;\n    }\n};",mode:"text/javascript"},null,n),l("p"),c("In this example the property "),l("code"),c("someValue"),a("code"),c(" will be accessible via the "),l("code"),c("$site"),a("code"),c(" parameter in your pages/templates."),a("p"),s({code:'---\ndescription: "Page description."\nlayout: "docs"\ntitle: "Page"\n---\n\n{$site.someValue}',mode:"markdown"},null,n),l("h3"),c("markdownOptions"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("Object"),a("code"),a("li"),a("ul"),l("p"),c("An Object Literal containing configuration options for "),l("a",null,null,"href","https://github.com/jonschlinkert/remarkable"),c("Remarkable"),a("a"),c(" which is used to render Markdown files."),a("p"),l("p"),c("Example:"),a("p"),s({code:"module.exports = {\n    markdownOptions: {\n        breaks: true\n    }\n};",mode:"text/javascript"},null,n),l("p"),c("See "),l("a",null,null,"href","https://github.com/jonschlinkert/remarkable#options"),c("Remarkable's documentation"),a("a"),c(" for list of options."),a("p"),l("h3"),c("markdownRenderer"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("function|Remarkable"),a("code"),a("li"),a("ul"),l("p"),c("Allows complete customization over the markdown renderer. Value can either be instance of "),l("a",null,null,"href","https://github.com/jonschlinkert/remarkable"),c("Remarkable"),a("a"),c(" or a function which receives the default instance of "),l("code"),c("Remarkable"),a("code"),c(" as an argument."),a("p"),l("p"),c("Example:"),a("p"),s({code:"// New Remarkable instance\nmodule.exports = {\n    markdownRenderer: new Remarkable()\n};\n\n// Function\nmodule.exports = {\n    markdownRenderer: function(md) {\n        md.core.ruler.enable([\n            'abbr'\n        ]);\n\n        return md;\n    }\n};",mode:"text/javascript"},null,n),l("h3"),c("pathDest"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("String"),a("code"),a("li"),l("li"),c("Default: "),l("code"),c("dist"),a("code"),a("li"),a("ul"),l("p"),c("The path that generated files are placed in."),a("p"),l("p"),c("Example:"),a("p"),s({code:"module.exports = {\n    pathDest: 'build'\n};",mode:"text/javascript"},null,n),l("p"),c("Now all generated files will be placed in the "),l("code"),c("build"),a("code"),c(" directory."),a("p"),l("h3"),c("pathSrc"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("String"),a("code"),a("li"),l("li"),c("Default: "),l("code"),c("src"),a("code"),a("li"),a("ul"),l("p"),c("The path where all source files are located."),a("p"),l("p"),c("Example:"),a("p"),s({code:"module.exports = {\n    pathSrc: 'web'\n};",mode:"text/javascript"},null,n),l("p"),c("Now "),l("code"),c("electric"),a("code"),c(" will look inside the "),l("code"),c("web"),a("code"),c(" directory for all source files."),a("p"),l("h3"),c("metalComponents"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("Array<String>"),a("code"),a("li"),a("ul"),l("p"),c("Array of "),l("code"),c("npm"),a("code"),c(" modules that expose Metal components. These also must be added as "),l("code"),c("npm"),a("code"),c(" dependencies in your package.json."),a("p"),l("p"),c("Example:"),a("p"),s({code:"module.exports = {\n    metalComponents: ['electric-components']\n};",mode:"text/javascript"},null,n),l("p"),c("The components found in the "),l("code"),c("electric-components"),a("code"),c(" package will now be available to all "),l("code"),c("soy"),a("code"),c(" files in your project."),a("p"),l("p"),c("Note that every package listed in "),l("code"),c("metalComponents"),a("code"),c(" must also be listed as a dependency in the project's "),l("code"),c("package.json"),a("code");c("."),a("p"),l("h3"),c("sassOptions"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("Object"),a("code"),a("li"),a("ul"),l("p"),c("Config object passed to "),l("a",null,null,"href","https://www.npmjs.com/package/gulp-sass"),c("gulp-sass"),a("a"),c("."),a("p"),l("p"),c("Example:"),a("p"),s({code:"module.exports = {\n    sassOptions: {\n        includePaths: ['node_modules/some-package/scss']\n    }\n};",mode:"text/javascript"},null,n),l("h3"),c("staticSrc"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("Array<String>"),a("code"),a("li"),a("ul"),l("p"),c("Array of glob patterns for static files found in the"),l("code"),c("options.pathSrc"),a("code"),c(" directory. These glob patterns target anything that isn't part of the build system (pages, layouts, styles, etc.)."),a("p"),l("p"),c("Note: it is not recommended to overwrite this property."),a("p"),l("h3"),c("uglifyBundle"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("boolean"),a("code"),a("li"),l("li"),c("Default: "),l("code"),c("false"),a("code"),a("li"),a("ul"),l("p"),c("Determines if bundle files are both minified and uglified."),a("p"),l("p"),c("When using "),l("code"),c("electric-cli"),a("code"),c(", this option defaults to "),l("code"),c("true"),a("code"),c(" during the "),l("code"),c("deploy"),a("code"),c(" task, and defaults to "),l("code"),c("false"),a("code"),c(" during all others."),a("p"),l("p"),c("Warning: enabling this option can significantly increase build times."),a("p"),l("h3"),c("vendorSrc"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("Array<String>"),a("code"),a("li"),l("li"),c("Default: "),l("code"),c("[]"),a("code"),a("li"),a("ul"),l("p"),c("Array of glob patterns for .css and .js files that should be included in the "),l("code"),c("<head>"),a("code"),c(" of your project."),a("p"),l("p"),c("Example:"),a("p"),s({code:"module.exports = {\n    vendorSrc: ['node_modules/some-project/src/min.js']\n};",mode:"text/javascript"},null,n),l("h3"),c("apiConfig"),a("h3"),l("ul"),l("li"),c("Type: "),l("code"),c("Object"),a("code"),a("li"),a("ul"),l("p"),c("Configuration object to generate the API documentation following the JSDOC specification."),a("p"),l("p"),c("Example:"),a("p"),s({code:"module.exports = {\n    apiConfig: {\n        layout: 'main',\n        project: {\n            docsConfig: {\n                shallow: true,\n            },\n            refs: ['electric@3.0.2'],\n            repo: 'electric',\n            soyAPIEntitiesPath: '../../../partials/ElectricAPIEntities.soy.js',\n            src: [\n                'packages/electric/lib/**/*.js',\n            ],\n            srcPath: 'packages',\n            user: 'electricjs'\n        }\n    }\n}",mode:"text/javascript"},null,n),l("h4"),c("Parameters"),a("h4"),l("ul"),l("li"),l("p"),l("strong"),c("layout"),a("strong"),c(" "),l("code"),c("?String"),a("code"),c(" Set the name of your layout that Electric should take as a basis, See an "),l("a",null,null,"href","https://github.com/electricjs/electric/blob/master/packages/generator-electric/generators/app/templates/src/layouts/main.soy"),c("example"),a("a"),c(". (default "),l("code"),c("main"),a("code"),c(")"),a("p"),a("li"),l("li"),l("p"),l("strong"),c("project"),a("strong"),c(" "),l("code"),c("!Object"),a("code"),c(" project"),a("p"),l("ul"),l("li"),l("p"),l("strong"),c("docsConfig"),a("strong"),c(" "),l("code"),c("?Object"),a("code"),c(" Config object passed to "),l("a",null,null,"href","https://github.com/documentationjs/documentation/blob/master/docs/NODE_API.md#build"),c("documentation"),a("a"),c(". default "),l("code"),c("access: ['public', 'private', 'protected', 'undefined'], private: true"),a("code"),a("p"),a("li"),l("li"),l("p"),l("strong"),c("refs"),a("strong"),c(" "),l("code"),c("!Array<string>"),a("code"),c(" Set the tag of the version that your project was launched, example "),l("code"),c("v1.0.0");a("code"),c(". (Remember that this is referring to releases released by the Github platform.)"),a("p"),a("li"),l("li"),l("p"),l("strong"),c("repo"),a("strong"),c(" "),l("code"),c("!String"),a("code"),c(" Set the name of the repository that contains your project."),a("p"),a("li"),l("li"),l("p"),l("strong"),c("soyAPIEntitiesPath"),a("strong"),c(" "),l("code"),c("?String"),a("code"),c(" Set your soy path containing "),l("code"),c("APIEntitiesName.soy.js"),a("code"),c(", See an example "),l("a",null,null,"href","https://github.com/electricjs/electric/blob/master/packages/electric-marble-components/src/ElectricAPIEntities.soy"),c("marble"),a("a"),c(" (default "),l("code"),c("electric-marble-components/lib/ElectricAPIEntities.soy.js"),a("code"),c(")"),a("p"),a("li"),l("li"),l("p"),l("strong"),c("src"),a("strong"),c(" "),l("code"),c("!Array<string>"),a("code"),c(" Pass the location of the files you want the Electric to analyze and generate the documents. (glob is supported.)"),a("p"),a("li"),l("li"),l("p"),l("strong"),c("srcPath"),a("strong"),c(" "),l("code"),c("?String"),a("code"),c(" Set the source path of your project. (default "),l("code"),c("src"),a("code"),c(")"),a("p"),a("li"),l("li"),l("p"),l("strong"),c("user"),a("strong"),c(" "),l("code"),c("!String"),a("code"),c(" Set the username or organization that your repo is on. (example "),l("code"),c("electric"),a("code"),c(")"),a("p"),a("li"),a("ul"),a("li"),a("ul"),l("div",null,null,"class","alert alert-inline alert-warning"),r("span",null,null,"class","icon-16-alert"),l("span",null,null,"class","alert-body"),l("b"),c("apiConfig.project.soyAPIEntitiesPath"),a("b"),c(" has its default value will be deprecated and removed in the next major releases. "),l("a",null,null,"href","https://github.com/electricjs/electric/issues/132","class","alert-link"),c("See issue"),a("a"),c("."),a("span"),a("div"),a("article"),l("input",null,null,"type","hidden","value",e.page.title),a("input"),l("input",null,null,"type","hidden","value",e.site.title),a("input")};p(o.$$assignDefaults({content:i},e),null,n)}goog.module("mTvyI.incrementaldom");var o=goog.require("soy");goog.require("soydata");goog.require("goog.asserts"),goog.require("soy.asserts"),goog.require("goog.i18n.bidi"),goog.require("goog.string");var n=goog.require("incrementaldom"),l=n.elementOpen,a=n.elementClose,r=n.elementVoid,c=(n.elementOpenStart,n.elementOpenEnd,n.text),s=(n.attr,d.default.getTemplate("ElectricCode.incrementaldom","render")),p=d.default.getTemplate("docs.incrementaldom","render");return e.render=t,goog.DEBUG&&(t.soyTemplateName="mTvyI.render"),e.render.params=["page","site"],e.render.types={page:"?",site:"?"},e.templates=i=e,e});var u=function(e){function t(){return l(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return r(t,e),t}(s.default);d.default.register(u,i),t.mTvyI=u,t.templates=i,t.default=i}},[134]);